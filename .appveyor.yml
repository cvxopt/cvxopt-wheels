version: 1.2.5.{build}-{branch}
image: Visual Studio 2019

environment:
    REPO_DIR: "cvxopt"
    PACKAGE_NAME: "cvxopt"
    BUILD_COMMIT: "1.2.5"
    BUILD_DEPENDS: "setuptools wheel"
    TEST_DEPENDS: "pytest"
    DEPLOY_DEPENDS: "twine"
    CVXOPT_BUILD_DSDP: "0"
    CVXOPT_BUILD_GLPK: "1"
    CVXOPT_MSVC: "1"
    TWINE_USERNAME: "__token__"
    TWINE_PASSWORD:    
        secure: 4zJCT875BtQ2jzr0umkkTkI3EQY0e+lzS/zFoDogDuGG/Wi6b20HHoeDIn8ZRVtSd9PS6mCfjRmcyCI1fagQuax8I0X+cnTh2Y/dRoBiTGIY1LDmQHIsz/BBX0TsJGfggx3wSJYDgEBspSXIPrT387KXid1hbCV2nFrvzgqW8BAuOJXFcl3vu5yTgorM0IBiIPOpXaK3f1+Qfm5KwFHFFGWlsafviQTxrJivp8ErS7O5zO4PCoWWfde09nMR9alsJ04o9l2cVaguWszVUkOU9Q==

    matrix:
        - PYTHON_VERSION: "3.8"
        - PYTHON_VERSION: "3.7"
        - PYTHON_VERSION: "3.6"
        - PYTHON_VERSION: "3.5"

platform:
    - x64
    - x86

matrix:
    fast_finish: true

install:
    # Configure build environment
    - cmd: |
        choco install wget checksum
        if [%PLATFORM%]==[x64] ( set "TARGET_ARCH=64" ) else ( set "TARGET_ARCH=32" ) 
        if [%PLATFORM%]==[x64] ( set "PLAT_NAME=win-amd64" ) else ( set "PLAT_NAME=win32" ) 
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars%TARGET_ARCH%.bat"
        set PYTHON_DIR=C:\Python%PYTHON_VERSION:.=%
        if [%PLATFORM%]==[x64] ( set "PYTHON_DIR=%PYTHON_DIR%-x64" )
        set "PATH=%PYTHON_DIR%;%PYTHON_DIR%\Scripts;%ProgramFiles%\7-Zip;%PATH%"
        python --version
        python -c "import struct; print(struct.calcsize('P') * 8)"
        python -m pip install --upgrade pip
        pip install --upgrade %BUILD_DEPENDS% 

    # Configure OpenBLAS, SuiteSparse, GLPK
    - cmd: |
        call .ci-support\config_openblas.bat 
        call .ci-support\config_suitesparse_src.bat
        if [%CVXOPT_BUILD_GLPK%]==[1] ( call .ci-support\config_glpk.bat )

before_build:
    - cmd: |
        git submodule update --init --recursive

build_script:
    - cmd: |
        cd %REPO_DIR%
        git checkout %BUILD_COMMIT%
        python setup.py build --compiler=msvc

after_build:
    - cmd: |
        set build_dir=build\lib.%PLAT_NAME%-%PYTHON_VERSION%\cvxopt
        mkdir %build_dir%\.lib
        copy %OPENBLAS_DLL% %build_dir%\.lib
        copy %OPENBLAS_LICENSE% %build_dir%
        python ..\.ci-support\_add_bootstrap.py %build_dir%
        python setup.py bdist_wheel
        ls dist/*

before_test:
    - cmd: |
        pip install --upgrade %TEST_DEPENDS% 
        pip install --no-index --find-links dist\ %PACKAGE_NAME%

test_script:
    - cmd: |
        python --version
        python -c "from cvxopt import blas,lapack,cholmod,umfpack"
        if [%CVXOPT_BUILD_DSDP%]==[1] ( python -c "from cvxopt import dsdp" )
        if [%CVXOPT_BUILD_FFTW%]==[1] ( python -c "from cvxopt import fftw" )
        if [%CVXOPT_BUILD_GLPK%]==[1] ( python -c "from cvxopt import glpk" )
        if [%CVXOPT_BUILD_GSL%]==[1] ( python -c "from cvxopt import gsl" )
        pytest

artifacts:
    - path: cvxopt\dist\*.whl
      name: Wheels

#before_deploy:
#    - cmd: |
#        set pypi_repo=https://upload.pypi.org/legacy/
#        set pypi_testrepo=https://test.pypi.org/legacy/ 
#        pip install --upgrade %DEPLOY_DEPENDS% 

#deploy_script:
#    - cmd: python -m twine upload --verbose --skip-existing --repository-url %pypi_testrepo% dist\*.whl
