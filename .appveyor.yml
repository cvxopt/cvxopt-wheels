version: 1.2.5.{build}-{branch}
image: Visual Studio 2019
init:
    - choco install wget checksum

environment:
  global:
    REPO_DIR: "cvxopt"
    PACKAGE_NAME: "cvxopt"
    BUILD_COMMIT: "1.2.5"
    BUILD_DEPENDS: "wheel"
    TEST_DEPENDS: "pytest"
    CVXOPT_BUILD_DSDP: "0"
    CVXOPT_BUILD_GLPK: "1"
    CVXOPT_BLAS_LIB: "libopenblas"
    CVXOPT_LAPACK_LIB: "libopenblas"
    GLPK_VERSION: "4.65"
    GLPK_SHA256: "4281e29b628864dfe48d393a7bedd781e5b475387c20d8b0158f329994721a10"
    SUITESPARSE_VERSION: "5.8.1"
    SUITESPARSE_SHA256: "06726e471fbaa55f792578f9b4ab282ea9d008cf39ddcc3b42b73400acddef40"
    OPENBLAS_VERSION: 0.3.10
    OPENBLAS_SHA256_x64: a307629479260ebfed057a3fc466d2be83a2bb594739a99c06ec830173273135
    OPENBLAS_SHA256_x86: 7eab2be38e4c79f0ce496e7cb3ae28be457aef1b21e70eb7e32147b479b7bb57

  matrix:
#    - PYTHON_VERSION: "3.9"
#      CVXOPT_MSVC: "1"
    - PYTHON_VERSION: "3.8"
      CVXOPT_MSVC: "1"
    - PYTHON_VERSION: "3.7"
      CVXOPT_MSVC: "1"
    - PYTHON_VERSION: "3.6"
      CVXOPT_MSVC: "1"
    - PYTHON_VERSION: "3.5"
      CVXOPT_MSVC: "1"
    - PYTHON_VERSION: "2.7"
      COMPILER: mingwpy

platform:
    - x64
    - x86

matrix:
    fast_finish: true

install:
    - if [%PLATFORM%]==[x64] (
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat" &
        set "PYTHON_DIR=C:\Python%PYTHON_VERSION:.=%-x64" &
        set "PLAT_NAME=win-amd64" &
        set OPENBLAS_SHA256=%OPENBLAS_SHA256_x64%
      ) else (
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat" &
        set "PYTHON_DIR=C:\Python%PYTHON_VERSION:.=%" &
        set "PLAT_NAME=win32" &
        set OPENBLAS_SHA256=%OPENBLAS_SHA256_x86%
      )

    # Check that we have the expected version and architecture for Python
    - SET "PATH=%PYTHON_DIR%;%PYTHON_DIR%\Scripts;%ProgramFiles%\7-Zip;%PATH%"
    - echo %PYTHON_DIR%
    - python --version
    - python -c "import struct; print(struct.calcsize('P') * 8)"
    - if [%COMPILER%]==[mingwpy] ( pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy )

    # Download OpenBLAS
    - wget -nv https://github.com/xianyi/OpenBLAS/releases/download/v%OPENBLAS_VERSION%/OpenBLAS-%OPENBLAS_VERSION%-%PLATFORM%.zip
    - wget https://raw.githubusercontent.com/xianyi/OpenBLAS/v%OPENBLAS_VERSION%/LICENSE -O LICENSE_OpenBLAS-%OPENBLAS_VERSION%
    - checksum -t sha256 -c %OPENBLAS_SHA256% OpenBLAS-%OPENBLAS_VERSION%-%PLATFORM%.zip
    - mkdir OpenBLAS
    - 7z x -oOpenBLAS -bso0 -bsp0 OpenBLAS-%OPENBLAS_VERSION%-%PLATFORM%.zip
    - set CVXOPT_BLAS_LIB_DIR=%cd%\OpenBLAS\lib
    - set OPENBLAS_DLL=%cd%\OpenBLAS\bin\libopenblas.dll
    - set OPENBLAS_LICENSE=%cd%\LICENSE_OpenBLAS-%OPENBLAS_VERSION%

    # Download SuiteSparse and set CVXOPT_SUITESPARSE_SRC_DIR
    - wget -nv https://github.com/DrTimothyAldenDavis/SuiteSparse/archive/v%SUITESPARSE_VERSION%.tar.gz -O SuiteSparse-%SUITESPARSE_VERSION%.tar.gz
    - checksum -t sha256 -c %SUITESPARSE_SHA256% SuiteSparse-%SUITESPARSE_VERSION%.tar.gz
    - mkdir SuiteSparse
    - 7z x -bso0 -bsp0 SuiteSparse-%SUITESPARSE_VERSION%.tar.gz && 7z x -bso0 -bsp0 SuiteSparse-%SUITESPARSE_VERSION%.tar
    - SET CVXOPT_SUITESPARSE_SRC_DIR=%cd%\SuiteSparse-%SUITESPARSE_VERSION%

    # Download and build GLPK
    - if [%CVXOPT_BUILD_GLPK%]==[1] (
        if [%CVXOPT_MSVC%]==[1] (
          wget -nv http://ftp.gnu.org/gnu/glpk/glpk-%GLPK_VERSION%.tar.gz &&
          checksum -t sha256 -c %GLPK_SHA256% glpk-%GLPK_VERSION%.tar.gz &&
          7z x -bso0 -bsp0 glpk-%GLPK_VERSION%.tar.gz && 7z x -bso0 -bsp0 glpk-%GLPK_VERSION%.tar &&
          cd glpk-%GLPK_VERSION%\w64 &&
          copy config_VC config.h &&
          nmake /f Makefile_VC glpk.lib &&
          cd ..\.. &&
          SET "CVXOPT_GLPK_LIB_DIR=%cd%\glpk-%GLPK_VERSION%\w64" &&
          SET "CVXOPT_GLPK_INC_DIR=%cd%\glpk-%GLPK_VERSION%\src"
        ) else (
          appveyor AddMessage "Disabled GLPK extension" -Category Warning &&
          SET "CVXOPT_BUILD_GLPK=0"
        )
      )
    
    - python -m pip install --upgrade pip
    - pip install %BUILD_DEPENDS% 
    - git submodule update --init --recursive
    
build_script:
    # Build wheel
    - cd %REPO_DIR%
    - git checkout %BUILD_COMMIT%
    - if [%COMPILER%]==[mingwpy] ( python setup.py build --compiler=mingw32 )
      else ( python setup.py build --compiler=msvc )
    - set build_dir=build\lib.%PLAT_NAME%-%PYTHON_VERSION%\cvxopt
    - mkdir %build_dir%\.lib
    - copy %OPENBLAS_DLL% %build_dir%\.lib
    - copy %OPENBLAS_LICENSE% %build_dir%
    - python ..\.appveyor\_add_bootstrap.py %build_dir%  
    - python setup.py bdist_wheel
    - ls dist/*

test_script:
    - pip install %TEST_DEPENDS% 
    - pip install --no-index --find-links dist/ %PACKAGE_NAME%

    # Run tests
    - python --version
    - python -c "from cvxopt import blas,lapack,cholmod,umfpack"
    - if [%CVXOPT_BUILD_DSDP%]==[1] ( python -c "from cvxopt import dsdp" )
    - if [%CVXOPT_BUILD_FFTW%]==[1] ( python -c "from cvxopt import fftw" )
    - if [%CVXOPT_BUILD_GLPK%]==[1] ( python -c "from cvxopt import glpk" )
    - if [%CVXOPT_BUILD_GSL%]==[1] ( python -c "from cvxopt import gsl" )
    - pytest

artifacts:
    - path: cvxopt/dist/*.whl
